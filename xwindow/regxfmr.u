 
 
object
    reg_xfmr_jacket: XmForm
        {
        arguments
            {
            XmNborderWidth = 0;
            XmNleftAttachment = XmATTACH_FORM;
            XmNtopAttachment = XmATTACH_FORM;
            XmNleftOffset = 15;
            XmNtopOffset = 60;
            XmNshadowThickness = 2;
            XmNshadowType = XmSHADOW_ETCHED_IN;
            XmNrightAttachment = XmATTACH_FORM;
            XmNrightOffset = 15;
!            XmNbottomAttachment = XmATTACH_WIDGET;
!            XmNbottomOffset = 15;
!            XmNbottomWidget = XmPushButton add_pushbutton;
            XmNbottomAttachment = XmATTACH_FORM;
            XmNbottomOffset = 150;
            };
        controls
            {
            XmLabelGadget regxfmr_owner_label;
            XmTextField regxfmr_owner_text;
            XmRadioBox regxfmr_radiobox_1;
            XmOptionMenu regxfmr_option_menu;
            XmLabelGadget regxfme_remote_label;
            XmTextField regxfmr_remote_name_text;
            XmTextField regxfmr_remote_kv_text;
            XmForm regxfmr_VQN_form;
            XmForm regxfmr_PM_form;
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                register_name(0);
                };
            };
        };
    regxfmr_owner_label: XmLabelGadget
        {
        arguments
            {
            XmNlabelString = compound_string("Owner");
            XmNleftAttachment = XmATTACH_FORM;
            XmNtopAttachment = XmATTACH_FORM;
            XmNtopOffset = 35;
            XmNleftOffset = 15;
            };
        };
    regxfmr_owner_text: XmTextField
        {
        arguments
            {
            arguments text_list_3;
            XmNleftAttachment = XmATTACH_WIDGET;
            XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
            XmNtopWidget = XmLabelGadget regxfmr_owner_label;
            XmNleftWidget = XmLabelGadget regxfmr_owner_label;
            XmNleftOffset = 128;
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                register_name(0);
                };
            };
        };
    regxfmr_fixed_rb: XmToggleButton
        {
        arguments
            {
            arguments toggle_defs;
            XmNlabelString = compound_string("Low Alpha Fixed");
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                register_name(0);
                };
            XmNvalueChangedCallback = procedures
                {
                process_regxfmr_rb("0");
                };
            };
        };
    regxfmr_bus1_tap_rb: XmToggleButton
        {
        arguments
            {
            arguments toggle_defs;
            XmNlabelString = compound_string("Bus 1 Variable");
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                register_name(0);
                };
            XmNvalueChangedCallback = procedures
                {
                process_regxfmr_rb("1");
                };
            };
        };
    regxfmr_bus2_tap_rb: XmToggleButton
        {
        arguments
            {
            arguments toggle_defs;
            XmNlabelString = compound_string("Bus 2 Variable");
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                register_name(0);
                };
            XmNvalueChangedCallback = procedures
                {
                process_regxfmr_rb("2");
                };
            };
        };
    regxfmr_radiobox_1: XmRadioBox
        {
        arguments
            {
            XmNisHomogeneous = false;
            XmNleftAttachment = XmATTACH_POSITION;
            XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
            XmNtopOffset = 0;
            XmNleftPosition = 60;
            XmNtopWidget = XmOptionMenu regxfmr_option_menu;
            };
        controls
            {
            XmToggleButton regxfmr_fixed_rb;
            XmToggleButton regxfmr_bus1_tap_rb;
            XmToggleButton regxfmr_bus2_tap_rb;
            };
        };
    regxfmr_R_pb: XmPushButton
        {
        arguments
            {
            XmNlabelString = compound_string("R");
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                register_name(0);
                };
            XmNactivateCallback = procedures
                {
                set_regxfmr_jckts_cb(" ");
                };
            };
        };
    regxfmr_RM_pb: XmPushButton
        {
        arguments
            {
            XmNlabelString = compound_string("RM");
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                register_name(0);
                };
            XmNactivateCallback = procedures
                {
                set_regxfmr_jckts_cb("M");
                };
            };
        };
    regxfmr_RN_pb: XmPushButton
        {
        arguments
            {
            XmNlabelString = compound_string("RN");
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                register_name(0);
                };
            XmNactivateCallback = procedures
                {
                set_regxfmr_jckts_cb("N");
                };
            };
        };
    regxfmr_RP_pb: XmPushButton
        {
        arguments
            {
            XmNlabelString = compound_string("RP");
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                register_name(0);
                };
            XmNactivateCallback = procedures
                {
                set_regxfmr_jckts_cb("P");
                };
            };
        };
    regxfmr_RQ_pb: XmPushButton
        {
        arguments
            {
            XmNlabelString = compound_string("RQ");
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                register_name(0);
                };
            XmNactivateCallback = procedures
                {
                set_regxfmr_jckts_cb("Q");
                };
            };
        };
    regxfmr_RV_pb: XmPushButton
        {
        arguments
            {
            XmNlabelString = compound_string("RV");
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                register_name(0);
                };
            XmNactivateCallback = procedures
                {
                set_regxfmr_jckts_cb("V");
                };
            };
        };
    regxfmr_option_menu: XmOptionMenu
        {
        arguments
            {
            XmNleftAttachment = XmATTACH_POSITION;
            XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
            XmNleftPosition = 33;
            XmNtopWidget = XmTextField regxfmr_owner_text;
            XmNtopOffset = -8;
            };
        controls
            {
            XmPulldownMenu
                {
                arguments
                    {
                    XmNborderWidth = 1;
                    };
                controls
                    {
                    XmPushButton regxfmr_R_pb;
                    XmPushButton regxfmr_RM_pb;
                    XmPushButton regxfmr_RN_pb;
                    XmPushButton regxfmr_RP_pb;
                    XmPushButton regxfmr_RQ_pb;
                    XmPushButton regxfmr_RV_pb;
                    };
                };
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                register_name(0);
                };
            };
        };
    regxfme_remote_label: XmLabelGadget
        {
        arguments
            {
            XmNlabelString = compound_string("Remote Bus");
            XmNleftAttachment = XmATTACH_OPPOSITE_WIDGET;
            XmNtopAttachment = XmATTACH_WIDGET;
            XmNleftWidget = XmLabelGadget regxfmr_owner_label;
            XmNtopWidget = XmLabelGadget regxfmr_owner_label;
            XmNtopOffset = 67;
            };
        };
    regxfmr_remote_name_text: XmTextField
        {
        arguments
            {
            arguments text_list_8;
            XmNleftAttachment = XmATTACH_WIDGET;
            XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
            XmNleftWidget = XmLabelGadget regxfme_remote_label;
            XmNtopWidget = XmLabelGadget regxfme_remote_label;
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                register_name(0);
                };
            };
        };
    regxfmr_remote_kv_text: XmTextField
        {
        arguments
            {
            arguments text_list_5;
            XmNleftAttachment = XmATTACH_WIDGET;
            XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
            XmNleftWidget = XmTextField regxfmr_remote_name_text;
            XmNtopWidget = XmTextField regxfmr_remote_name_text;
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                register_name(0);
                };
            };
        };
    regxfmr_VQN_form: XmForm
        {
        arguments
            {
            XmNleftAttachment = XmATTACH_FORM;
            XmNtopAttachment = XmATTACH_FORM;
            XmNrightAttachment = XmATTACH_FORM;
            XmNleftOffset = 15;
            XmNrightOffset = 15;
            XmNtopOffset = 241;
            XmNbottomAttachment = XmATTACH_FORM;
            XmNbottomOffset = 15;
            XmNshadowThickness = 2;
            XmNshadowType = XmSHADOW_ETCHED_IN;
            };
        controls
            {
            XmLabelGadget regxfmr_min_tap_label;
            XmTextField regxfmr_max_tap_text;
            XmTextField regxfmr_max_tap_text;
            XmLabelGadget regxfmr_max_tap_label;
            XmLabelGadget regxfmr_taps_label;
            XmTextField regxfmr_taps_text;
            XmTextField regxfmr_maxMVAR_text;
            XmTextField regxfmr_schedMVAR_text;
            XmTextField regxfmr_minMVAR_text;
            XmLabelGadget regxfmr_minMVAR_label;
            XmLabelGadget regxfmr_schedMVAR_label;
            XmLabelGadget regxfmr_maxMVAR_label;
            XmTextField regxfmr_min_tap_text;
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                register_name(0);
                };
            };
        };
    regxfmr_min_tap_label: XmLabelGadget
        {
        arguments
            {
            XmNy = 31;
            XmNlabelString = compound_string("Min Tap");
            XmNleftAttachment = XmATTACH_OPPOSITE_WIDGET;
            XmNtopAttachment = XmATTACH_NONE;
            XmNleftWidget = XmTextField regxfmr_min_tap_text;
            XmNrightAttachment = XmATTACH_OPPOSITE_WIDGET;
            XmNrightWidget = XmTextField regxfmr_min_tap_text;
            XmNbottomAttachment = XmATTACH_WIDGET;
            XmNbottomWidget = XmTextField regxfmr_min_tap_text;
            };
        };
    regxfmr_max_tap_text: XmTextField
        {
        arguments
            {
            arguments text_list_6;
            XmNleftAttachment = XmATTACH_POSITION;
            XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
            XmNleftPosition = 61;
            XmNtopWidget = XmTextField regxfmr_min_tap_text;
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                register_name(0);
                };
            };
        };
    regxfmr_min_tap_text: XmTextField
        {
        arguments
            {
            arguments text_list_6;
            XmNleftAttachment = XmATTACH_POSITION;
            XmNtopAttachment = XmATTACH_POSITION;
            XmNleftPosition = 20;
            XmNtopPosition = 19;
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                register_name(0);
                };
            };
        };
    regxfmr_taps_label: XmLabelGadget
        {
        arguments
            {
            XmNlabelString = compound_string("Number of Taps");
            XmNleftAttachment = XmATTACH_POSITION;
            XmNtopAttachment = XmATTACH_POSITION;
            XmNleftPosition = 26;
            XmNtopPosition = 42;
            };
        };
    regxfmr_max_tap_label: XmLabelGadget
        {
        arguments
            {
            XmNy = 28;
            XmNlabelString = compound_string("Max Tap");
            XmNleftAttachment = XmATTACH_OPPOSITE_WIDGET;
            XmNtopAttachment = XmATTACH_NONE;
            XmNleftWidget = XmTextField regxfmr_max_tap_text;
            XmNrightAttachment = XmATTACH_OPPOSITE_WIDGET;
            XmNrightWidget = XmTextField regxfmr_max_tap_text;
            XmNbottomAttachment = XmATTACH_WIDGET;
            XmNbottomWidget = XmTextField regxfmr_max_tap_text;
            };
        };
    regxfmr_taps_text: XmTextField
        {
        arguments
            {
            arguments text_list_2;
            XmNleftAttachment = XmATTACH_WIDGET;
            XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
            XmNleftWidget = XmLabelGadget regxfmr_taps_label;
            XmNtopWidget = XmLabelGadget regxfmr_taps_label;
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                register_name(0);
                };
            };
        };
    regxfmr_maxMVAR_text: XmTextField
        {
        arguments
            {
            arguments text_list_6;
            XmNleftAttachment = XmATTACH_POSITION;
            XmNtopAttachment = XmATTACH_POSITION;
            XmNleftPosition = 70;
            XmNtopPosition = 72;
            XmNleftOffset = -457;
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                register_name(0);
                };
            };
        };
    regxfmr_schedMVAR_text: XmTextField
        {
        arguments
            {
            arguments text_list_6;
            XmNleftAttachment = XmATTACH_POSITION;
            XmNtopAttachment = XmATTACH_POSITION;
            XmNtopPosition = 72;
            XmNleftPosition = 50;
            XmNleftOffset = -457;
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                register_name(0);
                };
            };
        };
    regxfmr_minMVAR_text: XmTextField
        {
        arguments
            {
            arguments text_list_6;
            XmNleftAttachment = XmATTACH_POSITION;
            XmNtopAttachment = XmATTACH_POSITION;
            XmNleftPosition = 30;
            XmNtopPosition = 72;
            XmNleftOffset = -457;
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                register_name(0);
                };
            };
        };
    regxfmr_minMVAR_label: XmLabelGadget
        {
        arguments
            {
            XmNlabelString = compound_string("Min MVAR");
            XmNleftAttachment = XmATTACH_OPPOSITE_WIDGET;
            XmNtopAttachment = XmATTACH_NONE;
            XmNleftWidget = XmTextField regxfmr_minMVAR_text;
            XmNrightAttachment = XmATTACH_OPPOSITE_WIDGET;
            XmNrightWidget = XmTextField regxfmr_minMVAR_text;
            XmNbottomAttachment = XmATTACH_WIDGET;
            XmNbottomWidget = XmTextField regxfmr_minMVAR_text;
            XmNleftOffset = -10;
            XmNrightOffset = -10;
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                register_name(0);
                };
            };
        };
    regxfmr_schedMVAR_label: XmLabelGadget
        {
        arguments
            {
            XmNlabelString = compound_string("Sched MVAR");
            XmNleftAttachment = XmATTACH_OPPOSITE_WIDGET;
            XmNtopAttachment = XmATTACH_NONE;
            XmNleftWidget = XmTextField regxfmr_schedMVAR_text;
            XmNrightAttachment = XmATTACH_OPPOSITE_WIDGET;
            XmNrightWidget = XmTextField regxfmr_schedMVAR_text;
            XmNbottomAttachment = XmATTACH_WIDGET;
            XmNbottomWidget = XmTextField regxfmr_schedMVAR_text;
            XmNleftOffset = -15;
            XmNrightOffset = -15;
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                register_name(0);
                };
            };
        };
    regxfmr_maxMVAR_label: XmLabelGadget
        {
        arguments
            {
            XmNlabelString = compound_string("Max MVAR");
            XmNleftAttachment = XmATTACH_OPPOSITE_WIDGET;
            XmNtopAttachment = XmATTACH_NONE;
            XmNleftWidget = XmTextField regxfmr_maxMVAR_text;
            XmNrightAttachment = XmATTACH_OPPOSITE_WIDGET;
            XmNrightWidget = XmTextField regxfmr_maxMVAR_text;
            XmNbottomAttachment = XmATTACH_WIDGET;
            XmNbottomWidget = XmTextField regxfmr_maxMVAR_text;
            XmNleftOffset = -15;
            XmNrightOffset = -15;
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                register_name(0);
                };
            };
        };
    regxfmr_PM_form: XmForm
        {
        arguments
            {
            XmNleftAttachment = XmATTACH_FORM;
            XmNtopAttachment = XmATTACH_FORM;
            XmNrightAttachment = XmATTACH_FORM;
            XmNleftOffset = 15;
            XmNrightOffset = 15;
            XmNtopOffset = 241;
            XmNbottomAttachment = XmATTACH_FORM;
            XmNbottomOffset = 15;
            XmNshadowThickness = 2;
            XmNshadowType = XmSHADOW_ETCHED_IN;
            };
        controls
            {
            XmLabelGadget regxfmr_min_shift_label;
            XmTextField regxfmr_max_shift_text;
            XmTextField regxfmr_min_shift_text;
            XmLabelGadget regxfmr_max_shift_label;
            XmLabelGadget regxfmr_shifts_label;
            XmTextField regxfmr_shifts_text;
            XmTextField regxfmr_maxflow_text;
            XmTextField regxfmr_schedflow_text;
            XmTextField regxfmr_minflow_text;
            XmLabelGadget regxfmr_minflow_label;
            XmLabelGadget regxfmr_schedflow_label;
            XmLabelGadget regxfmr_maxflow_label;
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                register_name(0);
                };
            };
        };
    regxfmr_min_shift_label: XmLabelGadget
        {
        arguments
            {
            XmNy = 31;
            XmNlabelString = compound_string("Min Phase Shift");
            XmNleftAttachment = XmATTACH_OPPOSITE_WIDGET;
            XmNtopAttachment = XmATTACH_NONE;
            XmNleftWidget = XmTextField regxfmr_min_shift_text;
            XmNrightAttachment = XmATTACH_OPPOSITE_WIDGET;
            XmNrightWidget = XmTextField regxfmr_min_shift_text;
            XmNbottomAttachment = XmATTACH_WIDGET;
            XmNbottomWidget = XmTextField regxfmr_min_shift_text;
            XmNleftOffset = -25;
            XmNrightOffset = -25;
            };
        };
    regxfmr_max_shift_text: XmTextField
        {
        arguments
            {
            arguments text_list_6;
            XmNleftAttachment = XmATTACH_POSITION;
            XmNtopAttachment = XmATTACH_POSITION;
            XmNleftPosition = 20;
            XmNtopPosition = 19;
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                register_name(0);
                };
            };
        };
    regxfmr_min_shift_text: XmTextField
        {
        arguments
            {
            arguments text_list_6;
            XmNleftAttachment = XmATTACH_POSITION;
            XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
            XmNtopWidget = XmTextField regxfmr_max_shift_text;
            XmNleftPosition = 61;
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                register_name(0);
                };
            };
        };
    regxfmr_shifts_label: XmLabelGadget
        {
        arguments
            {
            XmNlabelString = compound_string("Number of Shifts");
            XmNleftAttachment = XmATTACH_POSITION;
            XmNtopAttachment = XmATTACH_POSITION;
            XmNleftPosition = 26;
            XmNtopPosition = 42;
            };
        };
    regxfmr_max_shift_label: XmLabelGadget
        {
        arguments
            {
            XmNy = 28;
            XmNlabelString = compound_string("Max Phase Shift");
            XmNleftAttachment = XmATTACH_OPPOSITE_WIDGET;
            XmNtopAttachment = XmATTACH_NONE;
            XmNleftWidget = XmTextField regxfmr_max_shift_text;
            XmNrightAttachment = XmATTACH_OPPOSITE_WIDGET;
            XmNrightWidget = XmTextField regxfmr_max_shift_text;
            XmNbottomAttachment = XmATTACH_WIDGET;
            XmNbottomWidget = XmTextField regxfmr_max_shift_text;
            XmNleftOffset = -25;
            XmNrightOffset = -25;
            };
        };
    regxfmr_shifts_text: XmTextField
        {
        arguments
            {
            arguments text_list_2;
            XmNleftAttachment = XmATTACH_WIDGET;
            XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
            XmNleftWidget = XmLabelGadget regxfmr_shifts_label;
            XmNtopWidget = XmLabelGadget regxfmr_shifts_label;
            XmNleftOffset = 171;
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                register_name(0);
                };
            };
        };
    regxfmr_maxflow_text: XmTextField
        {
        arguments
            {
            arguments text_list_6;
            XmNleftAttachment = XmATTACH_POSITION;
            XmNtopAttachment = XmATTACH_POSITION;
            XmNleftPosition = 30;
            XmNtopPosition = 72;
            XmNleftOffset = -457;
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                register_name(0);
                };
            };
        };
    regxfmr_schedflow_text: XmTextField
        {
        arguments
            {
            arguments text_list_6;
            XmNleftAttachment = XmATTACH_POSITION;
            XmNtopAttachment = XmATTACH_POSITION;
            XmNtopPosition = 72;
            XmNleftPosition = 50;
            XmNleftOffset = -457;
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                register_name(0);
                };
            };
        };
    regxfmr_minflow_text: XmTextField
        {
        arguments
            {
            arguments text_list_6;
            XmNleftAttachment = XmATTACH_POSITION;
            XmNtopAttachment = XmATTACH_POSITION;
            XmNleftPosition = 70;
            XmNtopPosition = 72;
            XmNleftOffset = -457;
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                register_name(0);
                };
            };
        };
    regxfmr_minflow_label: XmLabelGadget
        {
        arguments
            {
            XmNlabelString = compound_string("Min Flow");
            XmNleftAttachment = XmATTACH_OPPOSITE_WIDGET;
            XmNtopAttachment = XmATTACH_NONE;
            XmNleftWidget = XmTextField regxfmr_minflow_text;
            XmNrightAttachment = XmATTACH_OPPOSITE_WIDGET;
            XmNrightWidget = XmTextField regxfmr_minflow_text;
            XmNbottomAttachment = XmATTACH_WIDGET;
            XmNbottomWidget = XmTextField regxfmr_minflow_text;
            XmNleftOffset = -10;
            XmNrightOffset = -10;
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                register_name(0);
                };
            };
        };
    regxfmr_schedflow_label: XmLabelGadget
        {
        arguments
            {
            XmNlabelString = compound_string("Sched Flow");
            XmNleftAttachment = XmATTACH_OPPOSITE_WIDGET;
            XmNtopAttachment = XmATTACH_NONE;
            XmNleftWidget = XmTextField regxfmr_schedflow_text;
            XmNrightAttachment = XmATTACH_OPPOSITE_WIDGET;
            XmNrightWidget = XmTextField regxfmr_schedflow_text;
            XmNbottomAttachment = XmATTACH_WIDGET;
            XmNbottomWidget = XmTextField regxfmr_schedflow_text;
            XmNleftOffset = -15;
            XmNrightOffset = -15;
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                register_name(0);
                };
            };
        };
    regxfmr_maxflow_label: XmLabelGadget
        {
        arguments
            {
            XmNlabelString = compound_string("Max Flow");
            XmNleftAttachment = XmATTACH_OPPOSITE_WIDGET;
            XmNtopAttachment = XmATTACH_NONE;
            XmNleftWidget = XmTextField regxfmr_maxflow_text;
            XmNrightAttachment = XmATTACH_OPPOSITE_WIDGET;
            XmNrightWidget = XmTextField regxfmr_maxflow_text;
            XmNbottomAttachment = XmATTACH_WIDGET;
            XmNbottomWidget = XmTextField regxfmr_maxflow_text;
            XmNleftOffset = -15;
            XmNrightOffset = -15;
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                register_name(0);
                };
            };
        };
