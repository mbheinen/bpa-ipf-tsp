 
 
procedure
!***VUIT_no_Generate***
!***VUIT_Action UserProc save_xgui ***
 
    save_xgui;
!***VUIT_no_Generate***
!***VUIT_Action UserProc setup_bus_style ***
 
    setup_bus_style;
!***VUIT_no_Generate***
!***VUIT_Action UserProc set_kv_colors ***
 
    set_kv_colors;
!***VUIT_no_Generate***
!***VUIT_Action UserProc set_overload_colors ***
 
    set_overload_colors;
 
object
    menuBar: XmMenuBar
        {
        arguments
            {
            XmNmenuHelpWidget = XmCascadeButtonGadget help_menu_cascade;
            XmNorientation = XmHORIZONTAL;
            XmNspacing = 10;
            };
        controls
            {
            XmCascadeButtonGadget files_menu_cascade;
            XmCascadeButtonGadget edit_menu_cascade;
            XmCascadeButtonGadget view_menu_cascade;
            XmCascadeButtonGadget process_menu_cascade;
            XmCascadeButtonGadget help_menu_cascade;
            };
        };
    files_menu_cascade: XmCascadeButtonGadget
        {
        arguments
            {
            XmNlabelString = compound_string("File");
            XmNmnemonic = keysym("F");
            };
        controls
            {
            XmPulldownMenu file_menu;
            };
        };
    file_menu: XmPulldownMenu
        {
        arguments
            {
            XmNborderWidth = 1;
            };
        controls
            {
            XmPushButtonGadget file_menu_new_button;
            XmPushButtonGadget file_menu_open_button;
            XmPushButtonGadget file_menu_save_button;
            XmPushButtonGadget file_menu_saveas_button;
            XmPushButtonGadget file_menu_savexgui_button;
            XmPushButtonGadget file_menu_print_plot_button;
            XmCascadeButton file_menu_plot_options_button;
            XmPushButtonGadget file_menu_exit_button;
            };
        };
    file_menu_new_button: XmPushButtonGadget
        {
        arguments
            {
            XmNlabelString = compound_string("New...");
            XmNmnemonic = keysym("N");
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                manage_file_new_message_dia(0);
                };
            };
        };
    file_menu_open_button: XmPushButtonGadget
        {
        arguments
            {
            XmNlabelString = compound_string("Open...");
            XmNmnemonic = keysym("O");
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                activate_open_file_dialog(0);
                set_default_files(0);
                };
            };
        };
    file_menu_save_button: XmPushButtonGadget
        {
        arguments
            {
            XmNlabelString = compound_string("Save");
            XmNmnemonic = keysym("S");
            XmNsensitive = false;
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                file_save_proc(0);
                };
            MrmNcreateCallback = procedures
                {
                register_name(0);
                };
            };
        };
    file_menu_saveas_button: XmPushButtonGadget
        {
        arguments
            {
            XmNlabelString = compound_string("Save As ...");
            XmNmnemonic = keysym("A");
            XmNsensitive = false;
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                manage_save_dialog(0);
                };
            MrmNcreateCallback = procedures
                {
                register_name(0);
                };
            };
        };
    file_menu_print_plot_button: XmPushButtonGadget
        {
        arguments
            {
            XmNlabelString = compound_string("Print Plot");
            XmNmnemonic = keysym("P");
            XmNsensitive = false;
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                print_plot(1);
                };
            MrmNcreateCallback = procedures
                {
                register_name(0);
                };
            };
        };
    file_menu_plot_options_button: XmCascadeButton
        {
        arguments
            {
            XmNlabelString = compound_string("Plot Options");
            XmNmnemonic = keysym("O");
            XmNsensitive = false;
            };
        controls
            {
            XmPulldownMenu
                {
                arguments
                    {
                    XmNx = 65;
                    XmNy = 9;
                    XmNborderWidth = 1;
                    };
                controls
                    {
                    XmPushButtonGadget cascade_user_comments_pb;
                    XmPushButtonGadget cascade_page_options_pb;
                    XmPushButtonGadget cascade_diagram_options_pb;
                    XmPushButtonGadget cascade_plot_destination_pb;
                    };
                };
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                register_name(0);
                };
            };
        };
    cascade_user_comments_pb: XmPushButtonGadget
        {
        arguments
            {
            XmNx = 19;
            XmNy = 17;
            XmNlabelString = compound_string("User Comments");
            XmNmnemonic = keysym("B");
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                user_comment_dialog_cb(0);
                };
            };
        };
    cascade_page_options_pb: XmPushButtonGadget
        {
        arguments
            {
            XmNx = 5;
            XmNy = 3;
            XmNlabelString = compound_string("Page Options...");
            XmNmnemonic = keysym("P");
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                manage_print_opt_page(0);
                };
            };
        };
    cascade_diagram_options_pb: XmPushButtonGadget
        {
        arguments
            {
            XmNx = 22;
            XmNy = 12;
            XmNlabelString = compound_string("Bus/Branch Options...");
            XmNmnemonic = keysym("D");
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                manage_plot_options_dialog(0);
                };
            };
        };
    cascade_plot_destination_pb: XmPushButtonGadget
        {
        arguments
            {
            XmNx = 13;
            XmNy = 25;
            XmNlabelString = compound_string("Plot Destination...");
            XmNmnemonic = keysym("P");
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                manage_printer_select_dia(0);
                };
            };
        };
    file_menu_exit_button: XmPushButtonGadget
        {
        arguments
            {
            XmNlabelString = compound_string("Exit...");
            XmNmnemonic = keysym("E");
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                activate_quit_dialog(0);
                };
            };
        };
    edit_menu_cascade: XmCascadeButtonGadget
        {
        arguments
            {
            XmNlabelString = compound_string("Edit");
            XmNmnemonic = keysym("E");
            XmNsensitive = false;
            };
        controls
            {
            XmPulldownMenu main_menu_pulldown;
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                register_name(0);
                };
            };
        };
    main_menu_pulldown: XmPulldownMenu
        {
        arguments
            {
            XmNborderWidth = 1;
            };
        controls
            {
            XmPushButtonGadget edit_alpha_list_pd_pb;
            XmPushButtonGadget edit_ntwk_data_edit_pd_pb;
            XmPushButtonGadget edit_network_pd_pb;
            XmPushButtonGadget edit_menu_area_button;
            XmPushButtonGadget edit_menu_pf_desc_pb;
            XmPushButtonGadget edit_menu_define_pb;
            };
        };
    edit_alpha_list_pd_pb: XmPushButtonGadget
        {
        arguments
            {
            XmNlabelString = compound_string("Alpha List");
            XmNmnemonic = keysym("A");
            XmNx = 1;
            XmNy = 2;
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                manage_ipf_alpha_bus_list(0);
                };
            };
        };
    edit_ntwk_data_edit_pd_pb: XmPushButtonGadget
        {
        arguments
            {
            XmNx = 61;
            XmNy = 59;
            XmNlabelString = compound_string("Network Data Edit...");
            XmNmnemonic = keysym("N");
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                manage_bus_edit_dialog(0);
                };
            };
        };
    edit_network_pd_pb: XmPushButtonGadget
        {
        arguments
            {
            XmNx = 8;
            XmNy = 66;
            XmNlabelString = compound_string("Network Editor (New)");
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                manage_network_edit_dialog(0);
                };
            };
        };
    edit_menu_area_button: XmPushButtonGadget
        {
        arguments
            {
            XmNlabelString = compound_string("Area/Interchange...");
            XmNmnemonic = keysym("I");
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                manage_area_selection_dialog(0);
                fill_area_selection_box2(0);
                };
            };
        };
    edit_menu_pf_desc_pb: XmPushButtonGadget
        {
        arguments
            {
            XmNx = 17;
            XmNy = 135;
            XmNlabelString = compound_string("PF ID/Description...");
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                register_name(0);
                };
            XmNactivateCallback = procedures
                {
                pf_descrip_form(0);
                fill_descrip_form(0);
                };
            };
        };
    edit_menu_define_pb: XmPushButtonGadget
        {
        arguments
            {
            XmNlabelString = compound_string("Define...");
            XmNmnemonic = keysym("D");
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                register_name(0);
                };
            XmNactivateCallback = procedures
                {
                define_selection_call(0);
                };
            };
        };
    view_menu_cascade: XmCascadeButtonGadget
        {
        arguments
            {
            XmNlabelString = compound_string("View");
            XmNmnemonic = keysym("V");
            XmNsensitive = false;
            };
        controls
            {
            XmPulldownMenu view_menu;
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                register_name(0);
                };
            };
        };
    view_menu: XmPulldownMenu
        {
        arguments
            {
            XmNborderWidth = 1;
            XmNx = 65;
            XmNwidth = 134;
            XmNy = 28;
            };
        controls
            {
            XmPushButtonGadget view_menu_reports_pd;
            XmPushButtonGadget view_menu_command_pd;
            XmToggleButtonGadget view_menu_solution_pd;
            XmCascadeButtonGadget view_menu_color_scheme_pd;
            XmCascadeButtonGadget view_menu_merge_pd;
            XmPushButtonGadget view_menu_display_pb;
            XmToggleButtonGadget view_menu_bus_combine_tb;
            };
        };
    view_menu_reports_pd: XmPushButtonGadget
        {
        arguments
            {
            XmNlabelString = compound_string("Reports...");
            XmNmnemonic = keysym("R");
            XmNx = 37;
            XmNy = 94;
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                activate_reports_dialog(0);
                pfGetFilterLists(0);
                };
            };
        };
    view_menu_command_pd: XmPushButtonGadget
        {
        arguments
            {
            XmNlabelString = compound_string("Command Dialog...");
            XmNmnemonic = keysym("D");
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                manage_command_dialog(0);
                };
            };
        };
    view_menu_solution_pd: XmToggleButtonGadget
        {
        arguments
            {
            XmNlabelString = compound_string("Solution Data On");
            XmNmnemonic = keysym("S");
            XmNy = 69;
            XmNvisibleWhenOff = true;
            };
        callbacks
            {
            XmNvalueChangedCallback = procedures
                {
                refresh_solution_data(0);
                };
            MrmNcreateCallback = procedures
                {
                register_name(0);
                };
            };
        };
    view_menu_color_scheme_pd: XmCascadeButtonGadget
        {
        arguments
            {
            XmNx = 13;
            XmNy = 179;
            XmNlabelString = compound_string("Color Scheme");
            };
        controls
            {
            XmPulldownMenu
                {
                arguments
                    {
                    XmNx = 42;
                    XmNy = 7;
                    XmNborderWidth = 1;
                    };
                controls
                    {
                    XmPushButtonGadget kv_color_pb;
                    XmPushButtonGadget overload_color_pb;
                    };
                };
            };
        };
    kv_color_pb: XmPushButtonGadget
        {
        arguments
            {
            XmNx = 4;
            XmNy = 4;
            XmNlabelString = compound_string("Color by KV");
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                set_kv_colors(0);
                };
            MrmNcreateCallback = procedures
                {
                register_name(0);
                };
            };
        };
    overload_color_pb: XmPushButtonGadget
        {
        arguments
            {
            XmNx = 8;
            XmNy = 19;
            XmNlabelString = compound_string("Color by Overload");
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                set_overload_colors(0);
                };
            MrmNcreateCallback = procedures
                {
                register_name(0);
                };
            };
        };
    view_menu_merge_pd: XmCascadeButtonGadget
        {
        arguments
            {
            XmNlabelString = compound_string("Merge Scheme");
            XmNsensitive = false;
            };
        controls
            {
            XmPulldownMenu
                {
                arguments
                    {
                    XmNx = 77;
                    XmNy = 12;
                    XmNborderWidth = 1;
                    };
                controls
                    {
                    XmPushButtonGadget coord_data_pb;
                    XmPushButtonGadget merge_coord_pb;
                    };
                };
            };
        };
    coord_data_pb: XmPushButtonGadget
        {
        arguments
            {
            XmNlabelString = compound_string("Coord Data Only");
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                register_name(0);
                };
            XmNactivateCallback = procedures
                {
                tools_set_view_mode_cb(0);
                };
            };
        };
    merge_coord_pb: XmPushButtonGadget
        {
        arguments
            {
            XmNlabelString = compound_string("Merge Coord Buses with Base");
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                register_name(0);
                };
            XmNactivateCallback = procedures
                {
                tools_set_view_mode_cb(1);
                };
            };
        };
    view_menu_display_pb: XmPushButtonGadget
        {
        arguments
            {
            XmNlabelString = compound_string("Display Setup...");
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                manage_display_dialog(0);
                };
            };
        };
    process_menu_cascade: XmCascadeButtonGadget
        {
        arguments
            {
            XmNlabelString = compound_string("Process");
            XmNmnemonic = keysym("P");
            XmNsensitive = false;
            };
        controls
            {
            XmPulldownMenu process_menu;
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                register_name(0);
                };
            };
        };
    process_menu: XmPulldownMenu
        {
        arguments
            {
            XmNborderWidth = 1;
            };
        controls
            {
            XmPushButtonGadget process_menu_solve_button;
            XmPushButtonGadget process_auto_cflow_pb;
            XmPushButtonGadget process_test_self_pb;
            XmPushButtonGadget process_test_c_code_pb;
            XmPushButtonGadget process_dmgr_debug_pb;
            };
        };
    process_menu_solve_button: XmPushButtonGadget
        {
        arguments
            {
            XmNlabelString = compound_string("Solve Case...");
            XmNmnemonic = keysym("S");
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                manage_solve_dialog(0);
                };
            MrmNcreateCallback = procedures
                {
                register_name(0);
                };
            };
        };
    process_auto_cflow_pb: XmPushButtonGadget
        {
        arguments
            {
            XmNlabelString = compound_string("Run CFLOW...");
            XmNmnemonic = keysym("R");
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                manage_cflow_select_dialog(0);
                };
            MrmNcreateCallback = procedures
                {
                register_name(0);
                };
            };
        };
    process_test_self_pb: XmPushButtonGadget
        {
        arguments
            {
            XmNy = 92;
            XmNlabelString = compound_string("System Test (MOTIF Dialogs)");
            XmNmnemonic = keysym("T");
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                system_test_pcdr(0);
                };
            MrmNcreateCallback = procedures
                {
                register_name(0);
                };
            };
        };
    process_test_c_code_pb: XmPushButtonGadget
        {
        arguments
            {
            XmNlabelString = compound_string("System Test (C-code)");
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                register_name(0);
                };
            XmNactivateCallback = procedures
                {
                system_test_c(0);
                };
            };
        };
    process_dmgr_debug_pb: XmPushButtonGadget
        {
        arguments
            {
            XmNlabelString = compound_string("Dmgr Debug Dialog");
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                debug_dmgr_cb(0);
                };
            MrmNcreateCallback = procedures
                {
                register_name(0);
                };
            };
        };
    help_menu_cascade: XmCascadeButtonGadget
        {
        arguments
            {
            XmNlabelString = compound_string("Help");
            XmNmnemonic = keysym("H");
            };
        controls
            {
            XmPulldownMenu help_menu;
            };
        };
    help_menu: XmPulldownMenu
        {
        arguments
            {
            XmNborderWidth = 1;
            };
        controls
            {
            XmPushButtonGadget help_menu_general_pb;
            XmPushButtonGadget help_error_msgs_pb;
            };
        };
    help_menu_general_pb: XmPushButtonGadget
        {
        arguments
            {
            XmNlabelString = compound_string("General...");
            XmNmnemonic = keysym("G");
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                manage_help_dialog(0);
                };
            };
        };
    help_error_msgs_pb: XmPushButtonGadget
        {
        arguments
            {
            XmNlabelString = compound_string("Error Messages...");
            XmNmnemonic = keysym("E");
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                manage_error_dialog(0);
                };
            };
        };
    file_menu_savexgui_button: XmPushButtonGadget
        {
        arguments
            {
            XmNlabelString = compound_string("Save XGUI");
            XmNmnemonic = keysym("G");
            };
        callbacks
            {
            XmNactivateCallback = procedures
                {
                ask_to_replace_XGUI(0);
                };
            };
        };
    view_menu_bus_combine_tb: XmToggleButtonGadget
        {
        arguments
            {
            XmNlabelString = compound_string("Combine Bus/Gen Symbols");
            XmNmnemonic = keysym("C");
            XmNvisibleWhenOff = true;
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                register_name(0);
                };
            XmNvalueChangedCallback = procedures
                {
                setup_bus_style(0);
                };
            };
        };
